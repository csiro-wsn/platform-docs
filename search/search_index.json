{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CSSE4011 Documentation This site contains links to guides used in the CSSE4011 stages and project. See the links on the left side menu.","title":"Home"},{"location":"#csse4011-documentation","text":"This site contains links to guides used in the CSSE4011 stages and project. See the links on the left side menu.","title":"CSSE4011 Documentation"},{"location":"getting_started/","text":"4011 Repository Setup Guide Pre-Requirements Fresh install of Ubuntu in VirtualBox VirtualBox Guest Editons for screen scaling/bidirectional copying VScode git sudo apt install git vim sudo apt install vim Ports fed through to virtual Devices - Segger JLink gcc-arm-none-eabi How to Install arm-none-eabi-gcc for Linux sudo add-apt-repository ppa:team-gcc-arm-embedded/ppa sudo apt-get update sudo apt-get install gcc-arm-embedded How to Install arm-none-eabi-gcc for OSX brew tap ArmMbed/homebrew-formulae brew install arm-none-eabi-gcc Installing Segger JLink download from https://www.segger.com/downloads/jlink/ J-Link Software and Documentation pack for Linux, DEB installer, 64-bit sudo dpkg -i ~/Downloads/jlink_5.2.7_x86_64.deb Requirements: git installation python 3.7 Linux/MAC OS JLink Debugger/Programmer e.g. JLink EDU Mini JLink Software and Drivers i.e. JLinkExe, JLinkRTT, etc ARM GCC compiler - i.e. gcc-arm-none-eabi-8-2018-q4-major Generate SSH Key ssh-keygen -t rsa -C \"example@example@uqconnect.edu.au\" ssh-add then copy the key from id_rsa.pub to your github account Setup the Repository git clone https://github.com/JordanYates/freertos_open.git run the repo_setup.sh script Set up environment variables Linux add the following lines to ~/.bashrc export PATH= /pacp-tools/tools:$PATH export PATH= /pacp-tools/pyclasses:$PATH export PATH= /pacp-freertos/tools:$PATH export PYTHONPATH= /pacp-tools/pyclasses:$PYTHONPATH export PYTHONPATH= /pacp-freertos/ pyclasses:$PYTHONPATH run source ~/.bashrc Compile and flash an app: compiling the app unifiedbase: cd unifiedbase make TARGET=argon tdf - this needs to be done once make TARGET=argon debug - to compile flashing an app connect your jlink EDU mini make TARGET=argon flashdbg -j tips: - make TARGET=argon help - generates help message - make TARGET=argon jlinksn - get serial numbers of devices connected - useful for multiple devices connected - make TARGET=argon JLINK=<serial number> - needed when multiple devices connected to computer or it will give you error, alternatively just take one out running the app: unifiedbase to display any meaningful output we must run baselisten, an app that listens for incoming BLE packets - cd pacp-tools - ./baselisten --serial /dev/ttyACM0 you can determine the serial device by typing - ls /dev/tty* which will display all the serial devices","title":"Getting Started"},{"location":"getting_started/#4011-repository-setup-guide","text":"","title":"4011 Repository Setup Guide"},{"location":"getting_started/#pre-requirements","text":"Fresh install of Ubuntu in VirtualBox VirtualBox Guest Editons for screen scaling/bidirectional copying VScode git sudo apt install git vim sudo apt install vim Ports fed through to virtual Devices - Segger JLink","title":"Pre-Requirements"},{"location":"getting_started/#gcc-arm-none-eabi","text":"How to Install arm-none-eabi-gcc for Linux sudo add-apt-repository ppa:team-gcc-arm-embedded/ppa sudo apt-get update sudo apt-get install gcc-arm-embedded How to Install arm-none-eabi-gcc for OSX brew tap ArmMbed/homebrew-formulae brew install arm-none-eabi-gcc","title":"gcc-arm-none-eabi"},{"location":"getting_started/#installing-segger-jlink","text":"download from https://www.segger.com/downloads/jlink/ J-Link Software and Documentation pack for Linux, DEB installer, 64-bit sudo dpkg -i ~/Downloads/jlink_5.2.7_x86_64.deb","title":"Installing Segger JLink"},{"location":"getting_started/#requirements","text":"git installation python 3.7 Linux/MAC OS JLink Debugger/Programmer e.g. JLink EDU Mini JLink Software and Drivers i.e. JLinkExe, JLinkRTT, etc ARM GCC compiler - i.e. gcc-arm-none-eabi-8-2018-q4-major","title":"Requirements:"},{"location":"getting_started/#generate-ssh-key","text":"ssh-keygen -t rsa -C \"example@example@uqconnect.edu.au\" ssh-add then copy the key from id_rsa.pub to your github account","title":"Generate SSH Key"},{"location":"getting_started/#setup-the-repository","text":"git clone https://github.com/JordanYates/freertos_open.git run the repo_setup.sh script","title":"Setup the Repository"},{"location":"getting_started/#set-up-environment-variables","text":"","title":"Set up environment variables"},{"location":"getting_started/#linux","text":"add the following lines to ~/.bashrc export PATH= /pacp-tools/tools:$PATH export PATH= /pacp-tools/pyclasses:$PATH export PATH= /pacp-freertos/tools:$PATH export PYTHONPATH= /pacp-tools/pyclasses:$PYTHONPATH export PYTHONPATH= /pacp-freertos/ pyclasses:$PYTHONPATH run source ~/.bashrc","title":"Linux"},{"location":"getting_started/#compile-and-flash-an-app","text":"","title":"Compile and flash an app:"},{"location":"getting_started/#compiling-the-app-unifiedbase","text":"cd unifiedbase make TARGET=argon tdf - this needs to be done once make TARGET=argon debug - to compile","title":"compiling the app unifiedbase:"},{"location":"getting_started/#flashing-an-app","text":"connect your jlink EDU mini make TARGET=argon flashdbg -j","title":"flashing an app"},{"location":"getting_started/#tips","text":"- make TARGET=argon help - generates help message - make TARGET=argon jlinksn - get serial numbers of devices connected - useful for multiple devices connected - make TARGET=argon JLINK=<serial number> - needed when multiple devices connected to computer or it will give you error, alternatively just take one out","title":"tips:"},{"location":"getting_started/#running-the-app-unifiedbase","text":"to display any meaningful output we must run baselisten, an app that listens for incoming BLE packets - cd pacp-tools - ./baselisten --serial /dev/ttyACM0 you can determine the serial device by typing - ls /dev/tty* which will display all the serial devices","title":"running the app: unifiedbase"}]}